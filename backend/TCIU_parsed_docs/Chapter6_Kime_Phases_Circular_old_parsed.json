{
  "metadata": {
    "created_at": "2025-05-15T17:01:01.304747",
    "total_sections": 3,
    "total_code_chunks": 3,
    "total_tables": 1,
    "r_libraries": [
      "animation",
      "circular",
      "ggplot2",
      "plotly",
      "tidyr"
    ]
  },
  "sections": [
    {
      "title": "Main",
      "content": "---\ntitle: \"Spacekime Analytics (Time Complexity and Inferential Uncertainty)\"\nsubtitle: \"Chapter 6: Circular Kime-Phase and Electron Orbit Densities (Circular Distributions)\"\nauthor: \"SOCR Team \"\ndate: \"`r format(Sys.time(),'%m/%d/%Y')`\"\noutput: \n  html_document:\n    theme: spacelab\n    highlight: tango\n    includes:\n      before_body: TCIU_header.html\n    toc: true\n    number_sections: true\n    toc_depth: 2\n    toc_float:\n      collapsed: false\n      smooth_scroll: true\n\nHere we show some of the parallels between circular kime-phase densities and electron orbit densities depicted as circular distributions.",
      "word_count": 66
    },
    {
      "title": "Circular Electron Orbit Densities",
      "content": "In many physics systems and chemistry applications, it's important to model the spatial distribution of elementary particles, such as electrons. For instance, in photoelectron spectroscopy experiments, we may measure the intensities of electrons to track their angular dependencies, which may be described as electric dipole approximations. These estimates may subsequently be used to study the electron emissions resulting from their interaction with photons. Suppose we measure the electron emission intensity, $I(\\theta)$, which can be expressed as a differential of the partial cross section:\n\n$$I(\\theta)\\equiv \\frac{d\\sigma}{d \\Omega}=\n\\frac{\\sigma}{4\\pi}\\left ( 1+ \\frac{\\beta}{2}(3\\cos^2(\\theta)-1) \\right ).$$\n\nThis ordinary differential equation describes the angular distribution of the emitted electrons from\na gas-phase sample in a random orientation, excited by $100\\%$ linearly polarized light, see [this reference](https://www.researchgate.net/publication/356920774_Dynamique_electronique_dans_les_molecules_organiques_par_la_spectroscopie_Core-Hole_Clock).\n\nIn this equation, $-\\pi\\leq \\theta<\\pi$ is the angle between the electric field vector and the vector that describes the *direction* (phase) of the electron ejected after the collision of the particle (electron) with a photon, $\\sigma$ is the angle integrated cross-section of a given particle state, and $-1\\le \\beta\\le 2$ is the [photoelectron asymmetry parameter](https://journals.aps.org/rmp/pdf/10.1103/RevModPhys.54.389), which is independent of $\\theta$, but can depend on the excitation energy or the particle's (electrons’) kinetic energy.\n\nThe graph below shows the probabilistic photoelectron differential cross-section showing\nthe photoionization of an atomic $1s$ orbital. An electron in this orbital has angular momentum $l=0$. Upon the electron-photon collision, the angular momentum of the electron increases to $l = 1$, according to the dipole selection rules ($\\Delta l = \\pm 1$). The ejected electron leaves the system as a *p-wave*, corresponding to the case of $\\beta = 2$. In this case, the intensity in the polarization vector plane is maximized and close to zero in the plane perpendicular to the polarization vector. Similar arguments hold for the orbital distributions of electrons with different characters and their relations to the corresponding $\\beta$ parameters.\n\nNote the connections between all four angular distributions (corresponding to $\\beta\\in \\{-1, 0, 1, 2 \\}$) in four symmetrical points, where the angular distributions are independent of the\n$\\beta$−values. For instance, the first point corresponding to $\\theta=54.7^o$ (see black line in the first quadrant, or $0.954695$ radians) is called the *magic angle* of the polarization vector of electromagnetic radiation. This *magic* is due to the intensity distribution being independent of the wave-character of the emitted electron. Assuming a perfect, $100\\%$, linear polarization, for an electron energy detector mounted at the *magic angle*, the angular distribution vanishes and the differential partial cross-section in\nthe above equation is proportional to the integral partial cross-section. When the particle analyzing detector is focused at a different angle, the correction factors (dependencies) need to be accounted for due to angular distribution effects.\n\nThe significance of the $\\beta$ parameter can be explicated in terms of an isolated carbon ($C$) atom. At all energies, an idealized and isolated $C\\ 1s$ photoelectron exhibits angular distribution corresponding to $\\beta = 2$ (green density). The polar angle (phase) represents the angle between the polarization vector (horizontal axis) and the emitted electron. The (green) plot shows that the electrons are preferentially emitted along the polarization vector. At one extreme, when $\\beta = 0$, the angular distribution is completely isotropic (circular, as it's independent of $\\theta$). In the other extreme, when $\\beta = -1$, the maximum of the distribution is mostly vertical, i.e., perpendicular to the horizontal polarization vector. This interpretation is valid only under the dipole approximation assumption when the wavelength of light is much larger than the dimension of the atoms (the wave is not varying inside the atom). For instance, experiments frequently use small radiation wavelength around $2\\ nm$, whereas the entire atom may be $10$ times smaller at about $0.2\\ nm$, which justifies the dipole approximation assumption. \n\nThis electron distribution map suggests that experiments are expect to observe more electrons when performing a measurement at $0^o$ angle and much fewer electrons when measuring at $90^o$. However, in practice, the difference in the observed electron densities compered to model predictions between the $0^o$ and $90^o$ angles is smaller than expected. This difference is a function of the photon energy. See [this publication demonstrating how the observed intensities can be used to estimate the $\\beta$ parameter](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.106.193009#fulltext) for the *chlorine* substituted carbon and for the *methyl* carbon in a series of chloroethanes. The more chlorine atoms are present in a molecule, the [lower $\\beta$ parameter is, and the deviation $2-\\beta$ is larger at the lowest ionization energies](https://journals.aps.org/rmp/pdf/10.1103/RevModPhys.54.389).\n\nNote that the angular distributions of these particles (electrons) are very structured.\nThey tend to be symmetric and do not come out independently all over the place. Rather, the distributions emerge in just a few directions, as narrow sprays or jets. About $90\\%$ of the time these distributions represent just two polar opposite jets, about $10\\%$ of the time there are three jets, $1\\%$ four jets, and so on progressively less likely.",
      "word_count": 805
    },
    {
      "title": "Kime-Phases Circular Distributions",
      "content": "<video autosize:true controls>\n  <source src=\"KimeRandomSamplingAnimation.mp4\" type=\"video/mp4\">\n</video>\n\n\n<!--html_preserve-->\n<div>\n    \t<footer><center>\n\t\t\t<a href=\"https://www.socr.umich.edu/\">SOCR Resource</a>\n\t\t\t\tVisitor number <img class=\"statcounter\" src=\"https://c.statcounter.com/5714596/0/038e9ac4/0/\" alt=\"Web Analytics\" align=\"middle\" border=\"0\">\n\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\tvar d = new Date();\n\t\t\t\t\tdocument.write(\" | \" + d.getFullYear() + \" | \");\n\t\t\t\t</script> \n\t\t\t\t<a href=\"https://socr.umich.edu/img/SOCR_Email.png\"><img alt=\"SOCR Email\"\n\t \t\t\ttitle=\"SOCR Email\" src=\"https://socr.umich.edu/img/SOCR_Email.png\"\n\t \t\t\tstyle=\"border: 0px solid ;\"></a>\n\t \t\t </center>\n\t \t</footer>\n\n\t<!-- Start of StatCounter Code -->\n\t\t<script type=\"text/javascript\">\n\t\t\tvar sc_project=5714596; \n\t\t\tvar sc_invisible=1; \n\t\t\tvar sc_partition=71; \n\t\t\tvar sc_click_stat=1; \n\t\t\tvar sc_security=\"038e9ac4\"; \n\t\t</script>\n\t\t\n\t\t<script type=\"text/javascript\" src=\"https://www.statcounter.com/counter/counter.js\"></script>\n\t<!-- End of StatCounter Code -->\n\t\n\t<!-- GoogleAnalytics -->\n\t\t<script src=\"https://www.google-analytics.com/urchin.js\" type=\"text/javascript\"> </script>\n\t\t<script type=\"text/javascript\"> _uacct = \"UA-676559-1\"; urchinTracker(); </script>\n\t<!-- End of GoogleAnalytics Code -->\n</div>\n<!--/html_preserve-->",
      "word_count": 102
    }
  ],
  "tables": [
    {
      "section": "Main",
      "content": "    code_folding: hide\n---",
      "row_count": 2
    }
  ],
  "r_code": [
    {
      "section": "Main",
      "code": "#install.packages(\"circular\")\nlibrary(\"circular\")\nlibrary(\"animation\")\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(plotly)",
      "line_count": 6
    },
    {
      "section": "Circular Electron Orbit Densities",
      "code": "# Display the electron densities for\ntheta <- seq(-pi, pi, length.out=200)\n\n# beta = is the asymmetry parameter, independent of θ, can depend on the excitation\n# energy or the electrons’ kinetic energy\n# σ is the angle integrated cross-section of a given state\nf <- function (theta, beta = -1, sigma=1) {\n    return ( (sigma/(4*pi))*(1 + (beta/2) * (3*cos(theta) * cos(theta) - 1)) )\n}\n\ndf <- data.frame(cbind(theta=theta,\n                       beta_1 = f(theta=theta, beta=-1, sigma=1),\n                       beta0 = f(theta=theta, beta=0, sigma=1),\n                       beta1 = f(theta=theta, beta=1, sigma=1),\n                       beta2 = f(theta=theta, beta=2, sigma=1)))\n\ndf_long <- gather(df, beta, value, c(beta_1,beta0, beta1,beta2), factor_key=TRUE)\n\nplot1 <- ggplot(df_long, aes(x = theta, y = value, colour = beta)) +\n    geom_line() +\n    geom_vline(xintercept=0.954695) +   # 54.7^o = 0.954695 radians\n    labs(title = \"\", x = \"\", y = \"\")+\n    # theme_bw() +\n    ggtitle(\"Electron angular density\") +\n    coord_polar(start = pi/2, direction = -1) +\n    scale_color_manual(labels = c(\"beta=-1\", \"beta=0\", \"beta=1\", \"beta=2\"),\n                       values = c(\"red\", \"gray\", \"blue\", \"green\")) +\n    theme(axis.text.y = element_blank(), plot.title = element_text(hjust=0.5),\n          axis.ticks.y = element_blank(), legend.position=\"bottom\") +\n    guides(color=guide_legend(\"Beta\\nValues\"))\n# ggplotly(plot1)\nplot1",
      "line_count": 32
    },
    {
      "section": "Kime-Phases Circular Distributions",
      "code": "saveHTML(\n  {\n  oopt = ani.options(interval = 0.2)\n  set.seed(1234)\n  x <- rvonmises(n=1000, mu=circular(pi/5), kappa=3)\n  y <- rvonmises(n=1000, mu=circular(-pi/3), kappa=5)\n  z <- rvonmises(n=1000, mu=circular(0), kappa=10)\n  r <- runif(n=1000, min=0, max=2)\n  vectorX = as.vector(x)\n  vectorY = as.vector(y)\n  vectorZ = as.vector(z)\n  plotX = c(vectorX[1])\n  plotY = c(vectorY[1])\n  plotZ = c(vectorZ[1])\n  for (i in 2:1000){\n    plotX = c(plotX,vectorX[i])\n    plotY = c(plotY,vectorY[i])\n    plotZ = c(plotZ,vectorZ[i])\n    \n    # Try to \"stack=T the points ....\n    #r1 = sqrt((resx$x)^2+(resx$y)^2)/2; \n    #resx$x = r1*cos(resx$data)\n    #resx$x = r1*cos(resx$data)\n    \n    tempX = circular(plotX)\n    tempY = circular(plotY)\n    tempZ = circular(plotZ)\n    resx <- density(tempX, bw=25, xaxt='n', yaxt='n')\n    resy <- density(tempY, bw=25, xaxt='n', yaxt='n')\n    resz <- density(tempZ, bw=25, xaxt='n', yaxt='n')\n    res <- plot(resx, points.plot=TRUE, xlim=c(-1.1,1.5), ylim=c(-1.5, 1.5), \n                main=\"Trivariate random sampling of\\n kime-magnitudes (times) and kime-directions (phases)\", \n                offset=0.9, shrink=1.0, ticks=T, lwd=3, axes=F, stack=TRUE, bins=150)\n    lines(resy, points.plot=TRUE, col=2, points.col=2, plot.info=res, offset=1.0, shrink=1.45, lwd=3, stack=T)\n    lines(resz, points.plot=TRUE, col=3, points.col=3, plot.info=res, offset=1.1, shrink=1.2, lwd=3, stack=T)\n    segments(0, 0, r[i]*cos(vectorX[i]), r[i]*sin(vectorX[i]), lwd=2, col= 'black')\n    segments(0, 0, r[i]*cos(vectorY[i]), r[i]*sin(vectorY[i]), lwd=2, col= 'red')\n    segments(0, 0, r[i]*cos(vectorZ[i]), r[i]*sin(vectorZ[i]), lwd=2, col= 'green')\n    ani.pause()\n  }\n  \n  \n  # To save animation as MP4 video\n  saveVideo({ \n    oopt = ani.options(interval = 0.2)\n    set.seed(1234)\n    x <- rvonmises(n=1000, mu=circular(pi/5), kappa=3)\n    y <- rvonmises(n=1000, mu=circular(-pi/3), kappa=5)\n    z <- rvonmises(n=1000, mu=circular(0), kappa=10)\n    r <- runif(n=1000, min=0, max=2)\n    vectorX = as.vector(x)\n    vectorY = as.vector(y)\n    vectorZ = as.vector(z)\n    plotX = c(vectorX[1])\n    plotY = c(vectorY[1])\n    plotZ = c(vectorZ[1])\n    for (i in 2:1000){\n      plotX = c(plotX,vectorX[i])\n      plotY = c(plotY,vectorY[i])\n      plotZ = c(plotZ,vectorZ[i])\n      \n      # Try to \"stack=T the points ....\n      #r1 = sqrt((resx$x)^2+(resx$y)^2)/2; \n      #resx$x = r1*cos(resx$data)\n      #resx$x = r1*cos(resx$data)\n      \n      tempX = circular(plotX)\n      tempY = circular(plotY)\n      tempZ = circular(plotZ)\n      resx <- density(tempX, bw=25, xaxt='n', yaxt='n')\n      resy <- density(tempY, bw=25, xaxt='n', yaxt='n')\n      resz <- density(tempZ, bw=25, xaxt='n', yaxt='n')\n      res <- plot(resx, points.plot=TRUE, xlim=c(-1.1,1.5), ylim=c(-1.5, 1.5), \n                  main=\"Trivariate random sampling of\\n kime-magnitudes (times) and kime-directions (phases)\", \n                  offset=0.9, shrink=1.0, ticks=T, lwd=3, axes=F, stack=TRUE, bins=150)\n      lines(resy, points.plot=TRUE, col=2, points.col=2, plot.info=res, offset=1.0, shrink=1.45, lwd=3, stack=T)\n      lines(resz, points.plot=TRUE, col=3, points.col=3, plot.info=res, offset=1.1, shrink=1.2, lwd=3, stack=T)\n      segments(0, 0, r[i]*cos(vectorX[i]), r[i]*sin(vectorX[i]), lwd=2, col= 'black')\n      segments(0, 0, r[i]*cos(vectorY[i]), r[i]*sin(vectorY[i]), lwd=2, col= 'red')\n      segments(0, 0, r[i]*cos(vectorZ[i]), r[i]*sin(vectorZ[i]), lwd=2, col= 'green')\n      ani.pause()\n    }\n    }, \n    video.name = \"C:/Users/Dinov/Desktop/KimeRandomSamplingAnimation.mp4\", \n    other.opts = \"-pix_fmt yuv420p -b:v 500K\",\n    ffmpeg = \"E:/Ivo.dir/Ivo_Tools/ffmpeg-20200218-ebee808-win64-static/bin/ffmpeg.exe\", \n    ani.width = 600, ani.height = 600\n  )\n  },\n  htmlfile  = \"Chapter6_Kime_Phases.html\"\n  \n)",
      "line_count": 92
    }
  ]
}