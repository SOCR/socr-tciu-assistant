{
  "metadata": {
    "created_at": "2025-05-15T17:01:01.249288",
    "total_sections": 14,
    "total_code_chunks": 10,
    "total_tables": 1,
    "r_libraries": [
      "plotly",
      "reticulate"
    ]
  },
  "sections": [
    {
      "title": "Main",
      "content": "---\ntitle: \"Spacekime Analytics (Time Complexity and Inferential Uncertainty)\"\nsubtitle: \"TCIU: Laplace Transform and Meijer-G Functions\"\nauthor: \"Yueyang Shen, Ivo Dinov, and the SOCR Team\"\ndate: \"`r format(Sys.time(),'%m/%d/%Y')`\"\noutput: \n  html_document:\n    theme: spacelab\n    highlight: tango\n    keep_md: false\n    includes:\n      before_body: TCIU_header.html\n    toc: true\n    number_sections: true\n    toc_depth: 3\n    toc_float:\n      collapsed: false\n      smooth_scroll: true\n```{css, echo=FALSE}\n.header-section-number::after {\n  content: \".\";\n}\n```\n<style>\na:link {\n    color: red;\n}\n\na:visited {\n    color: green;\n}\n\na:hover {\n    color: hotpink;\n}\n.theorem p {\n  padding: 15px 15px 15px 15px;\n}\n.theorem {\n  display: block;\n  font-style: italic;\n  font-size: 16px;\n  font-family: \"Times New Roman\";\n  color: black;\n  border-radius: 10px;\n  background-color: rgb(222,222,231);\n  box-shadow: 5px 10px 8px #888888;\n}\n.theorem[text]::before {\n  content: \"Theorem (\" attr(text) \") \";\n}\n.theorem::before {\n  content: \"Theorem. \";\n  font-weight: bold;\n  font-style: normal;\n  display: inline-block;\n  width: -webkit-fill-available;\n  color: white;\n  border-radius: 10px 10px 0 0;\n  padding: 10px 5px 5px 15px;\n  background-color: rgb(38, 38, 134);\n}\n.proof p {\n  padding: 15px 15px 15px 15px;\n}\n.proof {\n  display: block;\n  font-style: italic;\n  font-size: 16px;\n  font-family: \"Times New Roman\";\n  color: black;\n  border-radius: 10px;\n  background-color: rgb(193,254,184);\n  box-shadow: 5px 10px 8px #C1FEB8;\n}\n.proof[text]::before {\n  content: \"Theorem (\" attr(text) \") \";\n}\n.proof::before {\n  content: \"Proof. \";\n  font-weight: bold;\n  font-style: normal;\n  display: inline-block;\n  width: -webkit-fill-available;\n  color: white;\n  border-radius: 10px 10px 0 0;\n  padding: 10px 5px 5px 15px;\n  background-color: rgb(29, 213, 2);\n}\n.corollary p {\n  padding: 15px 15px 15px 15px;\n}\n.corollary {\n  display: block;\n  font-style: italic;\n  font-size: 16px;\n  font-family: \"Times New Roman\";\n  color: black;\n  border-radius: 10px;\n  background-color: rgb(249, 184, 163);\n  box-shadow: 5px 10px 8px #F9B8A3;\n}\n.corollary[text]::before {\n  content: \"Theorem (\" attr(text) \") \";\n}\n.corollary::before {\n  content: \"Corollary. \";\n  font-weight: bold;\n  font-style: normal;\n  display: inline-block;\n  width: -webkit-fill-available;\n  color: white;\n  border-radius: 10px 10px 0 0;\n  padding: 10px 5px 5px 15px;\n  background-color: rgb(295, 66,7);\n}\n.lemma p {\n  padding: 15px 15px 15px 15px;\n}\n.lemma {\n  display: block;\n  font-style: italic;\n  font-size: 16px;\n  font-family: \"Times New Roman\";\n  color: black;\n  border-radius: 10px;\n  background-color: rgb(252,218,41);\n  box-shadow: 5px 10px 8px #FCDA29;\n}\n.lemma[text]::before {\n  content: \"Theorem (\" attr(text) \") \";\n}\n.lemma::before {\n  content: \"Lemma. \";\n  font-weight: bold;\n  font-style: normal;\n  display: inline-block;\n  width: -webkit-fill-available;\n  color: white;\n  border-radius: 10px 10px 0 0;\n  padding: 10px 5px 5px 15px;\n  background-color: rgb(225,190,10);\n}\ndiv.container {\n          display:inline-block;\n}\n\n</style>\n\n\n\nEarlier in [Chapter 4](https://www.socr.umich.edu/TCIU/HTMLs/Chapter4_Laplace_Transform_Timeseries_Kimesurfaces.html) we discussed the [Laplace Transform](https://en.wikipedia.org/wiki/Laplace_transform), $\\mathcal{L}$, mapping spatio-temporal signals into 2D manifolds called *spacekime surfaces*. The Laplace transformation is a linear operator that maps complex-valued functions of a positive real variable (e.g., time, $t \\in\\mathbb{R}^+$) to complex valued functions defined over the complex plane, $\\kappa\\in\\mathbb{C}$\n\n$${\\mathcal {L}}(f)(\\kappa)=\\hat{f}(\\kappa)\\equiv F(\\kappa)=\\int_{0}^{\\infty} {f(t)e^{-\\kappa t} dt}.$$",
      "word_count": 421
    },
    {
      "title": "Theoretical Fundamentals and Geometric Properties",
      "content": "The [Laplace transform](https://en.wikipedia.org/wiki/Laplace_transform) is a special case of the more general [integral transform](https://en.wikipedia.org/wiki/Integral_transform) defined for a specific kernel $K(\\cdot,\\cdot)$:\n\n$$(Tf)(z)=\\int_{t_{1}}^{t_{2}}f(t)\\,K(t,z) dt.$$\n\nUnder certain cases, the [Meijer-G function](https://en.wikipedia.org/wiki/Meijer_G-function) turns out to be an effective symbolic computation strategy to compute integrals of the form: $\\int_0^{\\infty}f(x)dx$. It also has really important theoretical connections to the theory of complex numbers and mathematical (integral) transformations. It is an important function class that is closed with respect to many integral transformations (e.g., Fourier, Laplace transforms) and presents many flexibility to metamodeling and enhancing model interpretability. Specifically, this prior work shows the general utilization of the Meijer-G function [1]:\n\n$$\\text{Polynomials Approximants (Taylor series)} \\subset \\text{Algebraic Approximants (Pad√©)} \\subset \\text{Analytic Functions (Meijer-G)}$$\n\nLet's explore a few of these aspects.\n\nThe Meijer-G function is defined as follows:\n\\begin{equation}\n\\begin{split}\n    G_{p,q}^{m,n}(a_1,...a_p;b_1,b_2,...b_q|z)\\equiv G_{p,q}^{m,n}\\left(\\begin{array}{c}\na_p\\\\\nb_q\n\\end{array}\\bigg| z\\right)\\equiv G_{p,q}^{m,n}\\left(\\begin{array}{c}\n\\overbrace{a_1,...,a_n}^{\\text{n component}};\\overbrace{a_{n+1},...,a_{p}}^{\\text{p-n component}}\\\\\n\\underbrace{b_1,...,b_m}_{\\text{m component}};\\underbrace{b_{m+1},...,b_{q}}_{\\text{q-m component}}\n\\end{array}\\bigg| z\\right)=\\\\\\frac{1}{2\\pi i}\\int_{C}\\frac{\\Gamma(b_1-s)...\\Gamma(b_m-s)\\Gamma(1-a_1+s)...\\Gamma(1-a_n+s)}{\\Gamma(1-b_{m+1}+s)...\\Gamma(1-b_q+s)\\Gamma(a_{n+1}-s)...\\Gamma(a_{p}-s)}z^sds.\n\\end{split}\n\\end{equation} \n\nA key aspect of the *Meijer-G function* is its relation to the *Laplace transform*.\n\n<div class=\"theorem\" text='Laplace transform via Meijer  G'>\n  The Laplace transform for Meijer-G function of $x^2$ type is\n\\begin{equation}\n\\int_0^{\\infty} e^{-s\\cdot x}G_{p,q}^{m,n}\\left(\\begin{array}{c}\na_p\\\\\nb_q\n\\end{array}\\bigg| wx^2\\right)dx = \\frac{1}{\\sqrt{\\pi}s}G_{p+2,q}^{m,n+2}\\left(\\begin{array}{c}\n0,\\frac{1}{2},a_p\\\\\nb_q\n\\end{array}\\bigg| \\frac{4w}{s^2}\\right) \n\\label{eq1}\\tag{1}\n\\end{equation}\nMore explicitly, it is \n\n$$\\frac{1}{\\sqrt{\\pi}s}G_{p+2,q}^{m,n+2}\\left(\\begin{array}{c}\n\\overbrace{\\overbrace{0,\\frac{1}{2},a_1,....,a_n}^{n+2\\ components};a_{n+1},....a_{p}}^{p+2\\ components} \\\\\nb_q\n\\end{array} \\bigg| \\frac{4w}{s^2}\\right).$$\n</div>\n\n<div class=\"theorem\" text='Meijer-G function representation of the cosine function'>\n\nThe cosine family of base functions belong to the general Meijer-G family:\n\n\\begin{equation}\n    \\cos(x) = \\sqrt{\\pi}G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n0;\\frac{1}{2}\n\\end{array}\\bigg| \\frac{x^2}{4}\\right).\n\\end{equation}\n</div>\n\n\n<div class=\"proof\">\n\nWe can directly derive this from the definition by expanding the right hand side as follows. \n\n\\begin{equation}\n\\begin{split}\nRHS &= \\sqrt{\\pi} (-\\frac{1}{2\\pi i})\\int_{C}\\frac{\\prod_{j=1}^m\\Gamma(b_j-s)\\prod_{j=1}^n\\Gamma(1-a_j+s)}{\\prod_{j=m+1}^q\\Gamma(1-b_{j}+s)\\prod_{j=n+1}^q\\Gamma(a_j-s)}z^sds\\bigg|_{z=\\frac{x^2}{4}}\\\\\n&=\\sqrt{\\pi}(-\\frac{1}{2\\pi i})\\int_C \\frac{\\Gamma(-s)}{\\Gamma(1-\\frac{1}{2}+s)}z^sds\\bigg|_{z=\\frac{x^2}{4}}=\\sqrt{\\pi}(-\\frac{1}{2\\pi i}) \\underbrace{2\\pi i\\sum_{k=0}^{\\infty}res_{k}}_{\\text{residue theorem}}\n\\end{split}\n\\end{equation}\n\nThe gamma function $\\Gamma(z)$ has poles $0,-1,-2,....$, and $\\frac{1}{\\Gamma(z)}$ is entire  since the gamma function has no zeros.\nUsing the fact that only the poles from the numerator results in residues which contributes to the integration, and $\\text{res}_{z=n}\\Gamma(-z)=\\frac{(-1)^{n+1}}{n!}$ (the rest are scalar factors), we have\n\\newpage\n\\begin{equation}\n\\begin{split}\nRHS &= \\sqrt{\\pi}(-\\frac{1}{2\\pi i})2\\pi i\\sum_{k=0}^{\\infty}\\frac{(-1)^{k+1}}{k!}\\frac{1}{\\Gamma(\\frac{1}{2}+k)}(\\frac{x^2}{4})^k=-\\sum_{k=0}^{\\infty}\\frac{(-1)^{k+1}}{k!}x^{2k}\\\\&=\\sum_{k=0}^{\\infty}\\frac{(-1)^{k}}{k!}x^{2k}=\\cos(x)    \n\\end{split}\n\n\\end{equation}\nwhere we have used the fact that $\\frac{k!\\Gamma(\\frac{1}{2}+k)4^k}{\\sqrt{\\pi}}=(2k)!$. Since $k!2^k=2\\cdot 4\\cdot 6\\cdots 2k$ and $\\frac{\\Gamma(\\frac{1}{2}+k)2^k}{\\sqrt{\\pi}}=1\\cdot 3\\cdot 5...\\cdot (2k-1).$ \n</div>\n\nSchematically, the red contour of integration, $\\gamma$, can be extended to positive infinity on the right and the only contributions to the contour integral of $\\Gamma(-z)$ are the poles $0,1,2,\\cdots \\in \\mathbb{R}$.",
      "word_count": 380
    },
    {
      "title": "The Laplace transform as a Meijer-G function",
      "content": "We will demonstrate the representations of the Laplace transform of the trigonometric (cosine) basis and Bessel base functions, which are commonly used to expand most \"nice\" functions.\n\n<div class=\"corollary\" text='Laplace transform of cosine as a Meijer-G funciton'>\n\nThe cosine base functions can be represented via the general Meijer-G function as follows.\n\n$\\cos(x) = \\sqrt{\\pi}G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n0;\\frac{1}{2}\n\\end{array}\\bigg| \\frac{x^2}{4}\\right)$. \n\nAs the general form of Meijer-G function is closed under Laplace transform (Equ [1](#mjx-eqn-eq1)), we have:\n\n\\begin{equation}\n \\mathcal{L}(\\cos(wx))(s)=\\frac{s}{w^2+s^2}\n\\end{equation}\n</div>\n\n<div class=\"proof\" >\n\\begin{equation}\n\\begin{split}\n    \\mathcal{L}(\\cos(wx))(s) &= \\frac{1}{\\sqrt{\\pi}s}\\sqrt{\\pi}G_{2,2}^{1,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n0;\\frac{1}{2}\n\\end{array}\\bigg| \\frac{4w'}{s^2}\\right)\\bigg|_{w'=\\frac{w^2}{4}}\\\\\n&=\\frac{1}{s}\\left(\\frac{1}{1+x}\\right)\\bigg|_{x=\\frac{w^2}{s^2}}=\\frac{1}{s}\\cdot \\frac{1}{1+\\frac{w^2}{s^2}}=\\frac{s}{w^2+s^2}\n\\end{split}\n\\end{equation}\n</div>\n\n<div class=\"lemma\" >\n\\begin{equation}\n{}_2^1F(\\frac{1+n}{2},\\frac{2+n}{2},1+n,x)=\\frac{2^n(1-\\sqrt{1-x})^n}{\\sqrt{1-x}x^n}, \\forall n\\in \\mathbb{Z}\n\\end{equation}\n</div>   \n\n<div class=\"corollary\" text='Laplace transform of Bessel J functions'>\nThe [Bessel J function]() belong to the general Meijer-G family with $J_n(at) = G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{4}\\right), -\\frac{\\pi}{2}\\le arg(x)\\equiv at \\leq \\frac{\\pi}{2}$.\n\nUsing the general form of Meijer-G function being closed under Laplace transform (Equ [1](#mjx-eqn-eq1))\n\\begin{equation}\n \\mathcal{L}(J_n(at))(s)=\\frac{(-s+\\sqrt{a^2+s^2})^n}{a^n\\sqrt{s^2+a^2}}\n\\end{equation}\n</div>\n\n\n\n<div class=\"proof\" >\nApplying Equation ([1](#mjx-eqn-eq1)), we use $\\mathcal{L}{J_n(at)}(s)=G_{2,2}^{1,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{s^2}\\right)$ by referring to mathematica or we may refer to the special case for Meijer-G tabularized at wolfram website,\n\\begin{equation}\n\\begin{split}\nLHS&=\\frac{1}{\\sqrt{\\pi}s}\\cdot 2^{-n}\\sqrt{\\pi}(\\frac{a^2}{s^2})^{n/2}{}_2^1F(\\frac{1+n}{2},\\frac{2+n}{2},1+n,-\\frac{a^2}{s^2})\\\\&=2^{-n}s^{-1-n}a^n\\frac{2^n(1-\\sqrt{1-x})^n}{\\sqrt{1-x}x^n}\\bigg|_{x=-\\frac{a^2}{s^2}}\\\\&=s^{n-1}\\frac{1}{a^n}\\frac{(-1+\\sqrt{1+\\frac{a^2}{s^2}})^n}{\\sqrt{1+\\frac{a^2}{s^2}}}=\\frac{(-s+\\sqrt{a^2+s^2})^n}{a^n\\sqrt{s^2+a^2}}\n\\end{split}\n\\end{equation}\nwhere we made use the previous *lemma.*\n</div>",
      "word_count": 197
    },
    {
      "title": "Case studies with example animations",
      "content": "Let's explore several animation examples showcasing the parallels between raw and Laplace-transformed signals by expanding (continuing) the *domain* of the original signal ($\\mathbb{R}^+$) into the complex plane ($\\mathbb{C}$) using the Meijer-G functions.\n\n## The cosine base function\n\nThe following [Mathematica](https://en.wikipedia.org/wiki/Wolfram_Mathematica) code illustrates the solution for the original case on the left.\n\n\nThe corresponding Mathematica code for the transformed case on the right is below.\n\n\n\n![](meijerg_cosinefb.gif){width=45%}  ![](meijertg_forback.gif){width=45%}\n \n \nMore succinctly, the left-to-right side correspondence (the left graph corresponds to the left equation and the right graph corresponds to the right equation) is shown below.\n \n$$\\cos(wx)=\\sqrt{\\pi}G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n0;\\frac{1}{2}\n\\end{array}\\bigg| \\frac{(wx)^2}{4}\\right)\\Bigg|_{Im(\\cdot)=y=0} \\Longleftrightarrow \\begin{equation}\n\\begin{split}\n    \\mathcal{L}(\\cos(wx))(s) &= \\frac{1}{\\sqrt{\\pi}s}\\sqrt{\\pi}G_{2,2}^{1,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n0;\\frac{1}{2}\n\\end{array}\\bigg| \\frac{4w'}{s^2}\\right)\\bigg|_{w'=\\frac{w^2}{4}}\\\\\n&=\\frac{s}{w^2+s^2}\n\\end{split}\n\\end{equation}.$$\n \n <font size=\"5\"> **The <span style=\"text-decoration:underline\">time-ordered signal (event, i.e., the black curve - in this case $\\cos(wx)$) is anchored on the xz plane</span>, and the y-axis is a \"continuation\" for the signal to be defined on the complex plane. The perceived evolution is the changing value for w. Furthermore, the evaluated signal is complex-valued, and the z-axis resembles the real value so that it coincides with the original time-ordered signal, and the coloring resembles the phase where the (real part, phase information) is sufficient to resemble the whole functional landscape.**\n</font> \n\n## The Bessel J base function\n\nThe Bessel function example is similar compared to the previous cosine function example animation, but uses an appropriate Meijer-G function corresponding to the Bessel basis.\n\nThe general plot set up functionality for the [Bessel J function of the first kind](https://en.wikipedia.org/wiki/Bessel_function), a fixed $n=1$, and varying scenarios is shown below.\n\n\nHere are the specific Mathematica instructions to create the animations.\n\n\n\n\n\n![](meijerg_besselfb.gif){width=45%}  ![](meijerbesseltransformed_forback.gif){width=45%}\n\n\nHere is the direct correspondence between the Bessel $\\left (J_n(at)\\right )$ and the Meijer $\\left (G_{1,2}^{2,2}(\\cdot | \\cdot)\\right )$ functions.\n \n$$J_n(at) = G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{4}\\right)\\Bigg|_{Im(\\cdot)=y=0}, \\frac{-\\pi}{2}\\le arg(x)\\equiv at \\leq \\frac{\\pi}{2} \\Longleftrightarrow \\mathcal{L}{J_n(at)}(s)=G_{1,2}^{2,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{s^2}\\right)$$\n\nSpecifically, for $n=1$,\n\n$$J_1(at) = G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n\\frac{1}{2};-\\frac{1}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{4}\\right)\\Bigg|_{Im(\\cdot)=y=0}, \\frac{-\\pi}{2}\\le arg(x)\\equiv at \\leq \\frac{\\pi}{2} \\Longleftrightarrow \\mathcal{L}{J_1(at)}(s)=G_{1,2}^{2,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n\\frac{1}{2};-\\frac{1}{2}\n\\end{array}\\bigg|\\frac{a^2t^2}{s^2}\\right)$$\n\nHere is an example using a fixed $a=1$ and varying $n$ arguments.\n\n\n\n\n\n\n![](meijerg_besselaltfb.gif){width=45%}  ![](meijerbesseltransformedvaryn_forback.gif){width=45%}\n\n\nThe correspondence here is \n\n$$J_n(t) = G_{0,2}^{1,0}\\left(\\begin{array}{c}\n;\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{t^2}{4}\\right)\\Bigg|_{Im(\\cdot)=y=0}, \\frac{-\\pi}{2}\\le arg(x)\\equiv t \\leq \\frac{\\pi}{2} \\Longleftrightarrow \\mathcal{L}{J_n(t)}(s)=G_{1,2}^{2,2}\\left(\\begin{array}{c}\n0,\\frac{1}{2};\\\\\n\\frac{n}{2};-\\frac{n}{2}\n\\end{array}\\bigg|\\frac{t^2}{s^2}\\right)$$",
      "word_count": 356
    },
    {
      "title": "Python implementation",
      "content": "We can use the python-implementation in the symbolic computing package `sympy` to demonstrate the *symbolic* and *numerical* computisng of the *Meijer-G* function.\n\n\n\nHere is an example passing Meijer-G function parameters as four separate vectors.\n\n```{python}\nfrom sympy.functions import meijerg\nfrom sympy.abc import x, a\nfrom sympy.core.containers import Tuple\nfrom sympy import pprint  # pretty print\nimport mpmath             # Meijer-G function",
      "word_count": 60
    },
    {
      "title": "import sympy",
      "content": "import math",
      "word_count": 2
    },
    {
      "title": "Symbolic Meijer-G function representaiton",
      "content": "pprint(meijerg((1, 2), (a, 4), (5,), [], x), use_unicode=False)",
      "word_count": 8
    },
    {
      "title": "All the subvectors of parameters are available:",
      "content": "g = meijerg([1], [2], [3], [4], x)\n\nprint(\"Meijer-G Function form: \")\npprint(g, use_unicode=False)\nprint(\"Meijer-G Function argument: an: \")\npprint(g.an, use_unicode=False)\nprint(\"Meijer-G Function argument: ap: \")\npprint(g.ap, use_unicode=False)\nprint(\"Meijer-G Function argument: aother: \")\npprint(g.aother, use_unicode=False)\nprint(\"Meijer-G Function argument: bm: \")\npprint(g.bm, use_unicode=False)\nprint(\"Meijer-G Function argument: bq: \")\npprint(g.bq, use_unicode=False)\nprint(\"Meijer-G Function argument: bother: \")\npprint(g.bother, use_unicode=False)",
      "word_count": 55
    },
    {
      "title": "Meijer-G function as other special functions, e.g.,",
      "content": "from sympy import expand_func, S\nfrom sympy.simplify.hyperexpand import hyperexpand\n\nprint(\"Let's expand a couple of Meijer-G Functions:\\n\")\n\nprint(\"Exponential function <== ==> Meijer-G([[],[]], [[0],[]], -x): \")\nexpand_func(meijerg([[],[]], [[0],[]], -x))              # exp(x)\nprint(\"Trigonometric (sine) function <== ==> Meijer-G([[],[]], [[S(1)/2],[0]], (x/2)**2)): \")\nhyperexpand(meijerg([[],[]], [[S(1)/2],[0]], (x/2)**2))  # sin(x)/sqrt(pi)",
      "word_count": 43
    },
    {
      "title": "Numerical Meijer-G function evaluation",
      "content": "## Set parameters as 4 separate vectors\n#####     mpmath.meijerg([[], [-1/(k-1)], [0, 0], []], -p/k2)\n## Set parameters as a tensor, i.e., as two nested vectors\n#####     meijerg([(1, 2), (3, 4)], ([5], Tuple()), x)\np = 1\nk = 0.1\nk2 = 2\n\na1 = 0\na2 = 0\n\nb1 = 0\nb2 = 0.5\n\nmeijerGFunctionValue = mpmath.meijerg([[],[]], [[b1],[b2]], (p/2)**2)\ncosineFunctionValue = (math.cos(p)/math.sqrt(math.pi))",
      "word_count": 62
    },
    {
      "title": "print(mpmath.meijerg([[], [-1/(k-1)], [0, 0], []], -p/k2))",
      "content": "print(\"Meijer-G Function value: \", meijerGFunctionValue, \" <== ? ==> Cosine function value: \", cosineFunctionValue)\n\nprint(\"Meijer-G Function value: \", mpmath.meijerg([[],[]], [[0],[0.5]], (1/2)**2), \" <== ? ==> Cosine function value: \", (math.cos(1)/math.sqrt(math.pi)))\n```",
      "word_count": 31
    },
    {
      "title": "http://lidavidm.github.io/sympy/_modules/sympy/functions/special/hyper.html",
      "content": "```\n\n\n```{python}",
      "word_count": 2
    },
    {
      "title": "import the necessary python packages and sub-packages",
      "content": "import sympy\nimport math \nimport mpmath\nfrom sympy import pprint\n\np = 1\nk = 0.1\nk2 = 2\nprint(\"Evaluating the Meijer-G Function (Complex number): \", sympy.functions.special.hyper.meijerg([], [-1/(k-1)], [0, 0], [], -p/k2).evalf())",
      "word_count": 32
    },
    {
      "title": "References",
      "content": "[1] Alaa, Ahmed M. and van der Schaar,  Mihaela. (2019) \"Demystifying black-box models with symbolic metamodels.\" Advances in Neural Information Processing Systems (NeurIPS 2019), 32(6036).\n\n[2] Beals, Richard, and Jacek Szmigielski. \"Meijer-G-functions: a gentle introduction.\" Notices of the AMS 60.7 (2013): 866-872.\n\n[3] Olver, F.W.J., Lozier, D.W., Boisvert, R.F., Clark, C.W. (2010) NIST Handbook of Mathematical Functions, ISBN 9780521192255, Cambridge University Press.\n\n[4] Coelho, C. A., & Arnold, B. C. (2019). Finite form representations for Meijer-G and fox H functions. Cham, Switzerland: Springer International Publishing.\n\n[5] Dinov, ID and Velev, MV. (2021) Data Science: Time Complexity, Inferential Uncertainty, and Spacekime Analytics, De Gruyter, STEM Series, ISBN 978-3-11-069780-3, DOI 10.1515/9783110697827. \n\n\n<!--html_preserve-->\n<div>\n    \t<footer><center>\n\t\t\t<a href=\"https://www.socr.umich.edu/\">SOCR Resource</a>\n\t\t\t\tVisitor number <img class=\"statcounter\" src=\"https://c.statcounter.com/5714596/0/038e9ac4/0/\" alt=\"Web Analytics\" align=\"middle\" border=\"0\">\n\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\tvar d = new Date();\n\t\t\t\t\tdocument.write(\" | \" + d.getFullYear() + \" | \");\n\t\t\t\t</script> \n\t\t\t\t<a href=\"https://socr.umich.edu/img/SOCR_Email.png\"><img alt=\"SOCR Email\"\n\t \t\t\ttitle=\"SOCR Email\" src=\"https://socr.umich.edu/img/SOCR_Email.png\"\n\t \t\t\tstyle=\"border: 0px solid ;\"></a>\n\t \t\t </center>\n\t \t</footer>\n\n\t<!-- Start of StatCounter Code -->\n\t\t<script type=\"text/javascript\">\n\t\t\tvar sc_project=5714596; \n\t\t\tvar sc_invisible=1; \n\t\t\tvar sc_partition=71; \n\t\t\tvar sc_click_stat=1; \n\t\t\tvar sc_security=\"038e9ac4\"; \n\t\t</script>\n\t\t\n\t\t<script type=\"text/javascript\" src=\"https://www.statcounter.com/counter/counter.js\"></script>\n\t<!-- End of StatCounter Code -->\n\t\n\t<!-- GoogleAnalytics -->\n\t\t<script src=\"https://www.google-analytics.com/urchin.js\" type=\"text/javascript\"> </script>\n\t\t<script type=\"text/javascript\"> _uacct = \"UA-676559-1\"; urchinTracker(); </script>\n\t<!-- End of GoogleAnalytics Code -->\n</div>\n<!--/html_preserve-->",
      "word_count": 204
    }
  ],
  "tables": [
    {
      "section": "Main",
      "content": "    code_folding: hide\n---",
      "row_count": 2
    }
  ],
  "r_code": [
    {
      "section": "Main",
      "code": "knitr::opts_chunk$set(echo = TRUE)",
      "line_count": 1
    },
    {
      "section": "Theoretical Fundamentals and Geometric Properties",
      "code": "library(plotly)\nx=c(0,1,2,3,4,5,6,7,7.5)\nxprime=c(-0.5,0.6,1.7,2.8,3.9,5.1,6.3,7.5)\ny=c(0,0,0,0,0,0,0,0,0)\nyprime=c(0,0.1,0.15,0.2,0.2,0.15,0.1,0)\nz=c(0,0,0,0,0,0,0,0,1)\ndf <- data.frame(x = x, y = y, z = z)\n\n\nfig <- plot_ly()\nfig <- fig %>% add_lines(x = ~xprime,y =~yprime, name = \"spline\", line = list(shape = \"spline\"),color = I('red')) \nfig <- fig %>% add_lines(x = ~xprime,y =~-yprime, name = \"spline\", line = list(shape = \"spline\"),color = I('red')) \nfig <- fig %>% add_trace(x=~x,y = ~y, mode = 'markers', type = 'scatter', symbol = ~z, symbols = c('x','circle'),color = I('black'), marker = list(size = 10))\nfig <- fig %>% layout(showlegend = FALSE,yaxis = list(range = c(-0.8,1), title = 'y'),xaxis = list(range = c(-0.6,7.9), title = 'x'))\nfig <- fig %>% add_text(\n    x = 7.5, \n    y = 0, \n    size = I(15),\n    text = \"      \\U221E\",\n    hovertext = c(\n           \"unicode\"\n    ),\n    textposition = \"bottom center\",\n    hoverinfo = \"text\"\n  )\nfig <- fig %>% add_text(\n    x = 7.3, \n    y = 0.05, \n    size = I(15),\n    color = I('red'),\n    text = \"      \\U03B3\",\n    hovertext = c(\n           \"unicode\"\n    ),\n    textposition = \"top left\",\n    hoverinfo = \"text\"\n  )\nfig",
      "line_count": 38
    },
    {
      "section": "Case studies with example animations",
      "code": "gg[w_, x_] = Sqrt[Pi]*MeijerG[{{}, {}}, {{0}, {1/2}}, (w*x)^2/4]\n\nMeijerGcos[var1_, viewops : OptionsPattern[]] := \n Module[{plot, cosinepara}, \n  plot = Plot3D[Re[gg[var1, a + b*I]], {a, -10, 10}, {b, -2, 2}, \n    PlotRange -> Automatic, Mesh -> None, PlotPoints -> 500, \n    ColorFunction -> Function[{x, y, z}, Hue[Arg[gg[var1, x + I y]]]], \n    ColorFunctionScaling -> False, Axes -> True, \n    AxesStyle -> Arrowheads[0.01]];\n  cosinepara = \n   ParametricPlot3D[{t, 0, Cos[var1*t]}, {t, -10, 10}, \n    PlotStyle -> {Black, Thickness[0.005]}, AxesLabel -> {x, y, z}];\n  Show[cosinepara, plot, Axes -> True, \n   AxesLabel -> {Style[\"Time Ordered Signal - Classical t\", Bold, 12],\n      Style[\"Continued axis - y\", Bold, 10], \n     Style[\"Real value\", Bold, 16]}, \n   PlotRange -> {{-10, 10}, {-2, 2}, {-2, 2}}, Evaluate[viewops]]]\nani = Table[MeijerGcos[c], {c, 1, 5, 0.3}];\nanifb = Join[ani, Reverse[ani]];\nExport[\"C:\\\\Users\\\\user\\\\project\\\\cosinefb_test.gif\", anifb, \n       \"DisplayDurations\" -> 0.2, \n       \"AnimationReptitions\" -> 20, \n       \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 23
    },
    {
      "section": "Case studies with example animations",
      "code": "gtrans[w_, s_] = 1/s*MeijerG[{{0, 1/2}, {}}, {{0}, {1/2}}, w^2/(s^2)]\n\nani2 = Table[\n   Plot3D[Abs[gtrans[c, a + b*I]], {a, -5, 5}, {b, -5, 5}, \n    PlotRange -> Automatic, Mesh -> None, PlotPoints -> 500, \n    PlotLabel -> Style[\"The Transformed Domain\", Bold, 20], \n    AxesLabel -> {Style[\"Transformed x\", Bold, 12], \n      Style[\"Transformed y\", Bold, 12], Style[\"Intensity\", Bold, 12]},\n     ColorFunction -> \n     Function[{x, y, z}, Hue[Arg[gtrans[c, x + I y]]]], \n    ColorFunctionScaling -> False, Axes -> True, \n    AxesStyle -> Arrowheads[0.01]], {c, 1, 5, 0.3}];\nani2fb = Join[ani2, Reverse[ani2]];\nExport[\"C:\\\\Users\\\\meijertransformed_domain1_forback.gif\", ani2fb, \n  \"DisplayDurations\" -> 0.2, \"AnimationReptitions\" -> 20, \n  \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 16
    },
    {
      "section": "Case studies with example animations",
      "code": "# The original Domain\ngb[n_, a_, t_] = MeijerG[{{}, {}}, {{n/2}, {-n/2}}, (a*t)^2/4]\nMeijerGbessel[var1_, var2_, viewops : OptionsPattern[]] := \n Module[{plot, besselpara}, \n  plot = Plot3D[Re[gb[var1, var2, a + b*I]], {a, 0, 10}, {b, -2, 2}, \n    PlotRange -> Automatic, Mesh -> None, PlotPoints -> 500, \n    ColorFunction -> \n     Function[{x, y, z}, Hue[Arg[gb[var1, var2, x + I y]]]], \n    ColorFunctionScaling -> False, Axes -> True, \n    AxesStyle -> Arrowheads[0.01]];\n  besselpara = \n   ParametricPlot3D[{t, 0, BesselJ[var1, var2*t]}, {t, 0, 10}, \n    PlotStyle -> {Black, Thickness[0.01]}, AxesLabel -> {x, y, z}];\n  Show[besselpara, plot, Axes -> True, \n   PlotLabel -> Style[\"The Original Domain\", Bold, 30], \n   AxesLabel -> {Style[\"Time Ordered Signal - Classical t\", Bold, 24],\n      Style[\"Continued axis - y\", Bold, 16], \n     Style[\"Real value\", Bold, 20]}, \n   PlotRange -> {{0, 10}, {-2, 2}, {-2, 2}}, Evaluate[viewops]]]",
      "line_count": 19
    },
    {
      "section": "Case studies with example animations",
      "code": "# The original domain\nanib = Table[MeijerGbessel[1, c], {c, 1, 6, 1}];\nanibfb = Join[anib, Reverse[anib]];\nExport[\"C:\\\\Users\\\\user\\\\project\\\\meijerg_besselfb.gif\", anibfb, \"DisplayDurations\" -> 0.2, \n  \"AnimationReptitions\" -> 20, \n  \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 6
    },
    {
      "section": "Case studies with example animations",
      "code": "# The transformed domain\ngbtrans[n_, a_, s_] = (-s + Sqrt[a^2 + s^2])^n/(a^n*Sqrt[s^2 + a^2])\nanitb = Table[\n   Plot3D[Abs[gbtrans[1, c, a + b*I]], {a, -5, 5}, {b, -5, 5}, \n    PlotRange -> {{-5, 5}, {-5, 5}, {-5, 5}}, Mesh -> None, \n    PlotPoints -> 500, \n    PlotLabel -> Style[\"The Transformed Domain\", Bold, 30], \n    AxesLabel -> {Style[\"Transformed x\", Bold, 20], \n      Style[\"Transformed y\", Bold, 20], Style[\"Intensity\", Bold, 20]},\n     ColorFunction -> \n     Function[{x, y, z}, Hue[Arg[gbtrans[1, c, x + I y]]]], \n    ColorFunctionScaling -> False, Axes -> True, \n    AxesStyle -> Arrowheads[0.01]], {c, 1, 6, 1}];\nanitbfb = Join[anitb, Reverse[anitb]];\nExport[\"C:\\\\Users\\\\user\\\\project\\\\meijerbesseltransformed_forback.gif\", anitbfb, \n  \"DisplayDurations\" -> 0.2, \"AnimationReptitions\" -> 20, \n  \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 17
    },
    {
      "section": "Case studies with example animations",
      "code": "# The original domain\nani2b = Table[MeijerGbessel[c, 1], {c, 1, 6, 1}];\nani2bfb = Join[ani2b, Reverse[ani2b]];\nExport[\"C:\\\\Users\\\\user\\\\project\\\\besselaltfb.gif\", ani2bfb, \n       \"DisplayDurations\" -> 0.2, \n       \"AnimationReptitions\" -> 20,\n       \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 7
    },
    {
      "section": "Case studies with example animations",
      "code": "# The transformed domain\nanitb = Table[\n   Plot3D[Abs[gbtrans[c, 1, a + b*I]], {a, -5, 5}, {b, -5, 5}, \n    PlotRange -> {{-5, 5}, {-5, 5}, {-5, 5}}, Mesh -> None, \n    PlotPoints -> 500, \n    PlotLabel -> Style[\"The Transformed Domain\", Bold, 30], \n    AxesLabel -> {Style[\"Transformed x\", Bold, 20], \n      Style[\"Transformed y\", Bold, 20], Style[\"Intensity\", Bold, 20]},\n     ColorFunction -> \n     Function[{x, y, z}, Hue[Arg[gbtrans[c, 1, x + I y]]]], \n    ColorFunctionScaling -> False, Axes -> True, \n    AxesStyle -> Arrowheads[0.01]], {c, 1, 6, 1}];\nanitbfb = Join[anitb, Reverse[anitb]];\nExport[\"C:\\\\Users\\\\user\\\\project\\\\meijerbesseltransformedvaryn_forback.gif\", anitbfb, \n  \"DisplayDurations\" -> 0.2, \"AnimationReptitions\" -> 20, \n  \"AnimationDirection\" -> ForwardBackward, ImageSize -> 800];",
      "line_count": 16
    },
    {
      "section": "Python implementation",
      "code": "# install.packages(\"reticulate\")\nlibrary(reticulate)\nlibrary(plotly)\n# specify the path of the Python version that you want to use\n#py_path = \"C:/Users/Dinov/Anaconda3/\"  # manual\npy_path = Sys.which(\"python3\")       # automated\n# use_python(py_path, required = T)\nSys.setenv(RETICULATE_PYTHON = \"C:/Users/Dinov/Anaconda3/\")\nsys <- import(\"sys\", convert = TRUE)",
      "line_count": 9
    }
  ]
}