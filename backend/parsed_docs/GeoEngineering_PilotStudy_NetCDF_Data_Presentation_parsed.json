{
  "metadata": {
    "created_at": "2024-11-30T13:46:17.618371",
    "total_sections": 4,
    "total_code_chunks": 3,
    "total_tables": 1,
    "r_libraries": [
      "CFtime",
      "RColorBrewer",
      "archive",
      "data.table",
      "lattice",
      "ncdf4",
      "plotly",
      "raster"
    ]
  },
  "sections": [
    {
      "title": "Main",
      "content": "---\ntitle: \"GeoEngineering: Navigating the Risks and Potential Benefits of Human-Designed Climate Control\"\nsubtitle: \"<h2><u>American University, Rome - International Business Term Paper (June 2024)</u></h2>\"\nauthor: \"<h3>Radina Dinov (Michigan State University)</h3>\"\ndate: \"`r format(Sys.time(), '%B %d, %Y')`\"\ntags: [MSU, geo-engineering, climate change] \noutput:\n  html_document:\n    theme: spacelab\n    highlight: tango\n    toc: true\n    number_sections: true\n    toc_depth: 3\n    toc_float:\n      collapsed: false\n\n\n![image alt >](https://www.aur.edu//sites/default/files/aur_shield.png)\n\n<!-- This is an R/RStudio Pilot Project using [netCDF (.nc) data](https://www.unidata.ucar.edu/software/netcdf/) to explore Geo-Engineering ideas. -->",
      "word_count": 75
    },
    {
      "title": "Background",
      "content": "|   \"*We are the first generation to feel the effects of climate change and the last generation who can do something about it*\", President Barack Obama, at the First Session of [COP21](https://unfccc.int/event/cop-21). \n\nThe impacts of climate change are progressing so rapidly that we are the first generation to experience them directly. These effects could spiral beyond control. *Geoengineering is defined as the human-designed intentional manipulation of the environment, aimed at getting rid of the negative effects of climate change due to human induced factors*. This essay will cover the background, problems, justifications, and more about geoengineering along with the historical assessments of the CO2-climate problem in the United States. The overall theory and idea of manipulating climate change with geoengineering is extremely controversial (Keith), so the positives and negatives will be assessed.\n\n\n - Check some of [these Geo-engineering Article Sources](https://www.economist.com/search?q=geoengineering).\n - Read [this article](https://www.economist.com/the-economist-explains/2024/04/16/what-is-geoengineering), which defines **Geo-engineering** as “*the deliberate large-scale manipulation of the planetary environment to counteract anthropogenic climate change*”. \n\n\nThere a two complementary Geo-Engineering Strategies: \n\n - those that make it easier for the Earth to *lose heat*, and \n - those that *reduce the amount of heat gain*.",
      "word_count": 189
    },
    {
      "title": "Datasets",
      "content": "We can use [University of Washington Marine Cloud Brightening (MCB) programme data])(https://zenodo.org/records/8430485). Figure 4 in [this paper](https://gmd.copernicus.org/articles/17/2583/2024/) is generated by these data.\nAdditional data is available from the [Climate Research Unit](http://www.cru.uea.ac.uk/data).\n\n - [Download the *gmd_ukesm.tar.gz* file from this website](https://zenodo.org/records/8430485).\n - Use the `R` script below to load one of the many files in this tar-ball:\n\nThe examples make use of a netCDF file of climate data consisting of **predicted** long-term mean values (2033-02-14 through 2069-07-05, average of $720$ hours between $444$ elements) of near-surface air temperature on a grid of land points (longitude and latitude). The dimensions of the array are $192 (longitudes) \\times 144 (latitudes) \\times 444 (hours)$, thus forming a raster “stack” or “brick” consisting of $444$ layers.\n\n\n`r fileList`",
      "word_count": 122
    },
    {
      "title": "Some  Plots",
      "content": "...",
      "word_count": 1
    }
  ],
  "tables": [
    {
      "section": "Main",
      "content": "      smooth_scroll: true\n---",
      "row_count": 2
    }
  ],
  "r_code": [
    {
      "section": "Main",
      "code": "knitr::opts_chunk$set(echo = TRUE)",
      "line_count": 1
    },
    {
      "section": "Datasets",
      "code": "# install.packages(\"ncdf4\", \"raster\", \"archive\")\nlibrary(\"ncdf4\")\nlibrary(\"raster\")\nlibrary(archive)\nlibrary(CFtime)\nlibrary(lattice)\nlibrary(RColorBrewer)\n\nncFile <- \"C:/Users/IvoD/Desktop/Ivo.dir/Research/UMichigan/Publications_Books/2023/DSPA_Springer_2nd_Edition_2023/Rmd_HTML/appendix/gmd_ukesm.tar.gz\"\nfileList <- untar(ncFile, list=T)\n\nncin <- nc_open(\"C:/Users/IvoD/Desktop/Ivo.dir/Research/UMichigan/Publications_Books/2023/DSPA_Springer_2nd_Edition_2023/Rmd_HTML/appendix/ukesm_arise_ts_0NS.nc\")\n# ncin <- nc_open(archive_read(ncFile, file = \"ukesm_ssp_ts_ave.nc\"))\nprint(ncin)\n\n# Longitude, in degrees\nlon <- ncvar_get(ncin, \"longitude\")\nnlon <- dim(lon)   # 192\nhead(lon)\n# Latitude, in degrees\nlat <- ncvar_get(ncin, \"latitude\")\nnlat <- dim(lat)   # 192\nhead(lat)\n# Time\ntime <- ncvar_get(ncin,\"time\")\nlength(time)\n# Time units\ntunits <- ncatt_get(ncin,\"time\",\"units\")\ntunits\n\n# get temperature\ndname <- \"air_temperature\"\ntmp_array <- ncvar_get(ncin, dname)\ndlname <- ncatt_get(ncin, dname, \"long_name\")\ndunits <- ncatt_get(ncin, dname, \"units\")\nfillvalue <- ncatt_get(ncin, dname, \"_FillValue\")\ndim(tmp_array)  # [1] 192 144 444\nstr(tmp_array) # num [1:192, 1:144, 1:444] \n\n# get global attributes\n# title <- ncatt_get(ncin, 0, \"title\")\n# institution <- ncatt_get(ncin,0,\"institution\")\n# datasource <- ncatt_get(ncin,0,\"source\")\n# references <- ncatt_get(ncin,0,\"references\")\n# history <- ncatt_get(ncin,0,\"history\")\n# Conventions <- ncatt_get(ncin,0,\"Conventions\")\n\n# convert time to CFtime class\ncf <- CFtime(tunits$value, calendar = \"proleptic_gregorian\", time)\ncf\ntimestamps <- CFtimestamp(cf) # get character-string times\n# timestamps\n\ntime_cf <- CFparse(cf, timestamps) # parse the string into date components\n# time_cf",
      "line_count": 55
    },
    {
      "section": "Some  Plots",
      "code": "library(plotly)\nlibrary(data.table)\n\n# get a single slice or layer (January)\nm1 <- 10 # \"2033-11-11\" # the 10-th element\ntmp_slice <- tmp_array[ , , m1]\n\n# image(lon, lat, tmp_slice, col=rev(brewer.pal(10,\"RdBu\")))\ndf1 <- data.table(longitude = rep(lon, ncol(tmp_slice)), \n                 latitude = rep(lat, each = nrow(tmp_slice)),\n                 value = c(tmp_slice))\n\n# Surface 2D projection Map\n# g <- list(showland = TRUE, landcolor = toRGB(\"#e5ecf6\"))\n# fig <- plot_ly(type = 'scattergeo', mode = 'markers')\n# fig <- fig %>% layout(geo = g)\n# fig\n\n# 3D Dynamic SUrface Map\ng1 <- list(projection = list(type = 'orthographic'), showland = TRUE, \n          landcolor = \"lightgray\", lakecolor = \"lightblue\") # toRGB(\"#e5ecf6\")\nfig2033 <- plot_ly(type = 'scattergeo', mode = 'markers') %>% \n  add_trace(x=df1$longitude, y=df1$latitude, color=df1$value, \n            opacity=0.8, size=df1$value, showlegend=F) %>% \n  layout(geo = g1, title=\"(G6-1.5) A Geoengineering Model Intercomparison Project \\n (GeoMIP): Predicted Sunlight Reflection (2033-11-11)\") %>% hide_colorbar()\nfig2033\n\n# tail(time_cf) # 444 2069     7   5 \nm2 <- 444 # \"2069-07-5\" # the 444-th element\ntmp_slice <- tmp_array[ , , m2]\n\n# image(lon, lat, tmp_slice, col=rev(brewer.pal(10,\"RdBu\")))\ndf2 <- data.table(longitude = rep(lon, ncol(tmp_slice)), \n                 latitude = rep(lat, each = nrow(tmp_slice)),\n                 value = c(tmp_slice))\n\n# Surface 2D projection Map\n# g <- list(showland = TRUE, landcolor = toRGB(\"#e5ecf6\"))\n# fig <- plot_ly(type = 'scattergeo', mode = 'markers')\n# fig <- fig %>% layout(geo = g)\n# fig\n\n# 3D Dynamic SUrface Map\ng2 <- list(projection = list(type = 'orthographic'), showland = TRUE, \n          landcolor = \"lightgray\", lakecolor = \"lightblue\") # toRGB(\"#e5ecf6\")\nfig2069 <- plot_ly(type = 'scattergeo', mode = 'markers') %>% \n  add_trace(x=df2$longitude, y=df2$latitude, color=df2$value, \n            opacity=0.8, showlegend=F) %>% \n  layout(geo = g2, title=\"(G6-1.5) A Geoengineering Model Intercomparison Project \\n (GeoMIP): Predicted Sunlight Reflection (2069-07-5)\") %>% hide_colorbar()\nfig2069\n\ng3 <- list(projection = list(type = 'orthographic'), showland = TRUE, \n          landcolor = \"lightgray\", lakecolor = \"lightblue\") # toRGB(\"#e5ecf6\")\ndiff_fig <- plot_ly(type = 'scattergeo', mode = 'markers') %>% \n  add_trace(x=df2$longitude, y=df2$latitude, color=(df1$value- df2$value), \n            opacity=0.8, showlegend=F) %>% \n  layout(geo = g3, title=\"(G6-1.5) A Geoengineering Model Intercomparison Project \\n (GeoMIP): Predicted Diff Sunlight Reflection (2033 vs. 2069)\") %>% hide_colorbar()\ndiff_fig\n\n# ... Create the Synched 2033 and 2069 Models, and their Difference ...\n# Combine them into a subplot\n# main_plot <- subplot(fig2033, fig2069, diff_fig) %>%\n#   layout(\n#     title = \"(G6-1.5) A Geoengineering Model Intercomparison Project \\n (GeoMIP): Predicted Diff Sunlight Reflection (2033 vs. 2069)\",\n#     scene  = list(domain = list(x = c(0, 0.5), y = c(0.5, 1)), aspectmode = \"cube\"),\n#     scene2 = list(domain = list(x = c(0.5, 1), y = c(0.5, 1)), aspectmode = \"cube\"),\n#     scene3 = list(domain = list(x = c(0.25, 0.75), y = c(0, 0.5)), aspectmode = \"cube\")\n#   )\n# #https://stackoverflow.com/questions/77757102/possible-to-synchronize-3d-scatter-plotly-plots-in-r\n# \n# main_plot %>%\n#   htmlwidgets::onRender(\n#     \"function(x, el) {\n#       x.on('plotly_relayout', function(d) {\n#         const camera = Object.keys(d).filter((key) => /\\\\.camera$/.test(key));\n#         if (camera.length) {\n#           const scenes = Object.keys(x.layout).filter((key) => /^scene\\\\d*/.test(key));\n#           const new_layout = {};\n#           scenes.forEach(key => {\n#             new_layout[key] = {...x.layout[key], camera: {...d[camera]}};\n#           });\n#           Plotly.relayout(x, new_layout);\n#         }\n#       });\n#     }\")",
      "line_count": 85
    }
  ]
}